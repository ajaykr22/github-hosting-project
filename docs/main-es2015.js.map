{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Google Pay Demo';\r\n\r\n  paymentRequest: google.payments.api.PaymentDataRequest = {\r\n    apiVersion: 2,\r\n    apiVersionMinor: 0,\r\n    allowedPaymentMethods: [\r\n      {\r\n        type: 'CARD',\r\n        parameters: {\r\n          allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n          allowedCardNetworks: ['AMEX', 'VISA', 'MASTERCARD']\r\n        },\r\n        tokenizationSpecification: {\r\n          type: 'PAYMENT_GATEWAY',\r\n          parameters: {\r\n            gateway: 'example',\r\n            gatewayMerchantId: 'exampleGatewayMerchantId'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    merchantInfo: {\r\n      merchantId: 'BCR2DN4TZDX4REQX',\r\n      merchantName: 'Ability Games Limited'\r\n    },\r\n    transactionInfo: {\r\n      totalPriceStatus: 'FINAL',\r\n      totalPriceLabel: 'Total',\r\n      totalPrice: '1',\r\n      currencyCode: 'INR',\r\n      // countryCode: 'BE'\r\n    },\r\n    callbackIntents: ['PAYMENT_AUTHORIZATION']\r\n  };\r\n\r\n  onLoadPaymentData = (\r\n    event: Event\r\n  ): void => {\r\n    const eventDetail = event as CustomEvent<google.payments.api.PaymentData>;\r\n    console.log('load payment data', eventDetail.detail);\r\n  }\r\n\r\n  onPaymentDataAuthorized: google.payments.api.PaymentAuthorizedHandler = (\r\n    paymentData\r\n    ) => {\r\n      console.log('payment authorized', paymentData);\r\n      return {\r\n        transactionState: 'SUCCESS'\r\n      };\r\n    }\r\n\r\n  onError = (event: ErrorEvent): void => {\r\n    console.error('error', event.error);\r\n  }\r\n}\r\n","<h1>{{ title }}</h1>\r\n<hr />\r\n<google-pay-button\r\n    environment=\"TEST\"\r\n    buttonType=\"buy\"\r\n    buttonColor=\"black\"\r\n    [paymentRequest]=\"paymentRequest\"\r\n    (loadpaymentdata)=\"onLoadPaymentData($event)\"\r\n    (error)=\"onError($event)\"\r\n    [paymentAuthorizedCallback]=\"onPaymentDataAuthorized\"\r\n  >\r\n  </google-pay-button>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GooglePayButtonModule } from '@google-pay/button-angular';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    GooglePayButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
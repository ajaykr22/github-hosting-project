{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","paymentRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","currencyCode","callbackIntents","onLoadPaymentData","event","eventDetail","console","log","detail","onPaymentDataAuthorized","paymentData","transactionState","onError","error","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","AppRoutingModule","forRoot","exports","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Google Pay Demo';\r\n\r\n  paymentRequest: google.payments.api.PaymentDataRequest = {\r\n    apiVersion: 2,\r\n    apiVersionMinor: 0,\r\n    allowedPaymentMethods: [\r\n      {\r\n        type: 'CARD',\r\n        parameters: {\r\n          allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n          allowedCardNetworks: ['AMEX', 'VISA', 'MASTERCARD']\r\n        },\r\n        tokenizationSpecification: {\r\n          type: 'PAYMENT_GATEWAY',\r\n          parameters: {\r\n            gateway: 'example',\r\n            gatewayMerchantId: 'exampleGatewayMerchantId'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    merchantInfo: {\r\n      merchantId: 'BCR2DN4TZDX4REQX',\r\n      merchantName: 'Ability Games Limited'\r\n    },\r\n    transactionInfo: {\r\n      totalPriceStatus: 'FINAL',\r\n      totalPriceLabel: 'Total',\r\n      totalPrice: '1',\r\n      currencyCode: 'INR',\r\n      // countryCode: 'BE'\r\n    },\r\n    callbackIntents: ['PAYMENT_AUTHORIZATION']\r\n  };\r\n\r\n  onLoadPaymentData = (\r\n    event: Event\r\n  ): void => {\r\n    const eventDetail = event as CustomEvent<google.payments.api.PaymentData>;\r\n    console.log('load payment data', eventDetail.detail);\r\n  }\r\n\r\n  onPaymentDataAuthorized: google.payments.api.PaymentAuthorizedHandler = (\r\n    paymentData\r\n    ) => {\r\n      console.log('payment authorized', paymentData);\r\n      return {\r\n        transactionState: 'SUCCESS'\r\n      };\r\n    }\r\n\r\n  onError = (event: ErrorEvent): void => {\r\n    console.error('error', event.error);\r\n  }\r\n}\r\n","<h1>{{ title }}</h1>\r\n<hr />\r\n<google-pay-button\r\n    environment=\"TEST\"\r\n    buttonType=\"buy\"\r\n    buttonColor=\"black\"\r\n    [paymentRequest]=\"paymentRequest\"\r\n    (loadpaymentdata)=\"onLoadPaymentData($event)\"\r\n    (error)=\"onError($event)\"\r\n    [paymentAuthorizedCallback]=\"onPaymentDataAuthorized\"\r\n  >\r\n  </google-pay-button>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GooglePayButtonModule } from '@google-pay/button-angular';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    GooglePayButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}
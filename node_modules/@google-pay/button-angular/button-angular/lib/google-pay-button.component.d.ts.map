{"version":3,"file":"google-pay-button.component.d.ts","sources":["google-pay-button.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/// <reference types=\"googlepay\" />\nimport { ElementRef, OnChanges, OnInit } from '@angular/core';\nexport declare class GooglePayButtonComponent implements OnInit, OnChanges {\n    private elementRef;\n    private manager;\n    paymentRequest: google.payments.api.PaymentDataRequest;\n    environment: google.payments.api.Environment;\n    existingPaymentMethodRequired: boolean;\n    buttonColor?: google.payments.api.ButtonColor;\n    buttonType?: google.payments.api.ButtonType;\n    buttonSizeMode?: google.payments.api.ButtonSizeMode;\n    paymentDataChangedCallback?: google.payments.api.PaymentDataChangedHandler;\n    paymentAuthorizedCallback?: google.payments.api.PaymentAuthorizedHandler;\n    readyToPayChangeCallback?: (result: any) => void;\n    loadPaymentDataCallback?: (paymentData: google.payments.api.PaymentData) => void;\n    cancelCallback?: (reason: google.payments.api.PaymentsError) => void;\n    errorCallback?: (error: Error) => void;\n    constructor(elementRef: ElementRef);\n    get isReadyToPay(): boolean | undefined;\n    ngOnInit(): Promise<void>;\n    ngOnChanges(): Promise<void>;\n    private initializeButton;\n    private assertRequiredProperty;\n    /**\n     * Throws an error.\n     *\n     * Used for testing purposes so that the method can be spied on.\n     */\n    private throwError;\n    private dispatch;\n}\n"]}
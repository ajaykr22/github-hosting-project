/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="googlepay" />
import { ElementRef, OnChanges, OnInit } from '@angular/core';
export declare class GooglePayButtonComponent implements OnInit, OnChanges {
    private elementRef;
    private manager;
    paymentRequest: google.payments.api.PaymentDataRequest;
    environment: google.payments.api.Environment;
    existingPaymentMethodRequired: boolean;
    buttonColor?: google.payments.api.ButtonColor;
    buttonType?: google.payments.api.ButtonType;
    buttonSizeMode?: google.payments.api.ButtonSizeMode;
    paymentDataChangedCallback?: google.payments.api.PaymentDataChangedHandler;
    paymentAuthorizedCallback?: google.payments.api.PaymentAuthorizedHandler;
    readyToPayChangeCallback?: (result: any) => void;
    loadPaymentDataCallback?: (paymentData: google.payments.api.PaymentData) => void;
    cancelCallback?: (reason: google.payments.api.PaymentsError) => void;
    errorCallback?: (error: Error) => void;
    constructor(elementRef: ElementRef);
    get isReadyToPay(): boolean | undefined;
    ngOnInit(): Promise<void>;
    ngOnChanges(): Promise<void>;
    private initializeButton;
    private assertRequiredProperty;
    /**
     * Throws an error.
     *
     * Used for testing purposes so that the method can be spied on.
     */
    private throwError;
    private dispatch;
}

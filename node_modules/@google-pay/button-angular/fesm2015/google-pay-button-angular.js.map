{"version":3,"file":"google-pay-button-angular.js","sources":["../../../lib/load-script.ts","../../../lib/button-manager.ts","../../../lib/debounce.ts","../../lib/google-pay-button.component.ts","../../lib/google-pay-button.module.ts","../../../angular-public-api.ts","../../../google-pay-button-angular.ts"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Keeps track scripts that have been requested by loadScript.\n */\nlet cachedScripts: Record<string, Promise<any>> = {};\n\n/**\n * Asynchronously loads a script keeping track of which scripts have already\n * requested and loaded.\n *\n * Multiple requests to the same resource will return the same promise.\n *\n * @param src Script URL to load\n */\nexport function loadScript(src: string): Promise<void> {\n  const existing = cachedScripts[src];\n  if (existing) {\n    return existing;\n  }\n\n  const promise = new Promise<void>((resolve, reject) => {\n    // Create script\n    const script = document.createElement('script');\n    script.src = src;\n    script.async = true;\n\n    // Script event listener callbacks for load and error\n    const onScriptLoad = (): void => {\n      resolve();\n    };\n\n    const onScriptError = (): void => {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      cleanup();\n\n      // Remove from cachedScripts so that we can try loading again\n      delete cachedScripts[src];\n      script.remove();\n\n      reject(new Error(`Unable to load script ${src}`));\n    };\n\n    script.addEventListener('load', onScriptLoad);\n    script.addEventListener('error', onScriptError);\n\n    // Add script to document body\n    document.body.appendChild(script);\n\n    // Remove event listeners on cleanup\n    function cleanup(): void {\n      script.removeEventListener('load', onScriptLoad);\n      script.removeEventListener('error', onScriptError);\n    }\n  });\n\n  cachedScripts[src] = promise;\n\n  return promise;\n}\n\n/**\n * Clears the script cache. Used for testing purposes only.\n */\nexport function clearScriptCache(): void {\n  cachedScripts = {};\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable react/no-is-mounted */\n\nimport { loadScript } from '../lib/load-script';\n\nexport interface ReadyToPayChangeResponse {\n  isButtonVisible: boolean;\n  isReadyToPay: boolean;\n  paymentMethodPresent?: boolean;\n}\n\nexport interface Config {\n  environment: google.payments.api.Environment;\n  existingPaymentMethodRequired?: boolean;\n  paymentRequest: google.payments.api.PaymentDataRequest;\n  onPaymentDataChanged?: google.payments.api.PaymentDataChangedHandler;\n  onPaymentAuthorized?: google.payments.api.PaymentAuthorizedHandler;\n  onLoadPaymentData?: (paymentData: google.payments.api.PaymentData) => void;\n  onCancel?: (reason: google.payments.api.PaymentsError) => void;\n  onError?: (error: Error) => void;\n  onReadyToPayChange?: (result: ReadyToPayChangeResponse) => void;\n  buttonColor?: google.payments.api.ButtonColor;\n  buttonType?: google.payments.api.ButtonType;\n  buttonSizeMode?: google.payments.api.ButtonSizeMode;\n}\n\ninterface ButtonManagerOptions {\n  cssSelector: string;\n  softwareInfoId: string;\n  softwareInfoVersion: string;\n}\n\n/**\n * Manages the lifecycle of the Google Pay button.\n *\n * Includes lifecycle management of the `PaymentsClient` instance,\n * `isReadyToPay`, `onClick`, `loadPaymentData`, and other callback methods.\n */\nexport class ButtonManager {\n  private client?: google.payments.api.PaymentsClient;\n  private config?: Config;\n  private element?: Element;\n  private options: ButtonManagerOptions;\n  private oldInvalidationValues?: any[];\n\n  isReadyToPay?: boolean;\n  paymentMethodPresent?: boolean;\n\n  constructor(options: ButtonManagerOptions) {\n    this.options = options;\n  }\n\n  getElement(): Node | undefined {\n    return this.element;\n  }\n\n  private isGooglePayLoaded(): boolean {\n    return 'google' in (window || global) && !!google?.payments?.api?.PaymentsClient;\n  }\n\n  async mount(element: Element): Promise<void> {\n    if (!this.isGooglePayLoaded()) {\n      await loadScript('https://pay.google.com/gp/p/js/pay.js');\n    }\n\n    this.element = element;\n    if (element) {\n      this.appendStyles();\n      if (this.config) {\n        this.updateElement();\n      }\n    }\n  }\n\n  unmount(): void {\n    this.element = undefined;\n  }\n\n  configure(newConfig: Config): void {\n    this.config = newConfig;\n    if (!this.oldInvalidationValues || this.isClientInvalidated(newConfig)) {\n      this.updateElement();\n    }\n    this.oldInvalidationValues = this.getInvalidationValues(newConfig);\n  }\n\n  /**\n   * Creates client configuration options based on button configuration\n   * options.\n   *\n   * This method would normally be private but has been made public for\n   * testing purposes.\n   *\n   * @private\n   */\n  createClientOptions(config: Config): google.payments.api.PaymentOptions {\n    const clientConfig: google.payments.api.PaymentOptions = {\n      environment: config.environment,\n      merchantInfo: this.createMerchantInfo(config),\n    };\n\n    if (config.onPaymentDataChanged || config.onPaymentAuthorized) {\n      clientConfig.paymentDataCallbacks = {};\n\n      if (config.onPaymentDataChanged) {\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        clientConfig.paymentDataCallbacks.onPaymentDataChanged = paymentData => {\n          const result = config.onPaymentDataChanged!(paymentData);\n          return result || ({} as google.payments.api.PaymentDataRequestUpdate);\n        };\n      }\n\n      if (config.onPaymentAuthorized) {\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        clientConfig.paymentDataCallbacks.onPaymentAuthorized = paymentData => {\n          const result = config.onPaymentAuthorized!(paymentData);\n          return result || ({} as google.payments.api.PaymentAuthorizationResult);\n        };\n      }\n    }\n\n    return clientConfig;\n  }\n\n  private createIsReadyToPayRequest(config: Config): google.payments.api.IsReadyToPayRequest {\n    const paymentRequest = config.paymentRequest;\n    const request: google.payments.api.IsReadyToPayRequest = {\n      apiVersion: paymentRequest.apiVersion,\n      apiVersionMinor: paymentRequest.apiVersionMinor,\n      allowedPaymentMethods: paymentRequest.allowedPaymentMethods,\n      existingPaymentMethodRequired: config.existingPaymentMethodRequired,\n    };\n\n    return request;\n  }\n\n  /**\n   * Constructs `loadPaymentData` request object based on button configuration.\n   *\n   * It infers request properties like `shippingAddressRequired`,\n   * `shippingOptionRequired`, and `billingAddressRequired` if not already set\n   * based on the presence of their associated options and parameters. It also\n   * infers `callbackIntents` based on the callback methods defined in button\n   * configuration.\n   *\n   * This method would normally be private but has been made public for\n   * testing purposes.\n   *\n   * @private\n   */\n  createLoadPaymentDataRequest(config: Config): google.payments.api.PaymentDataRequest {\n    const request = {\n      ...config.paymentRequest,\n      merchantInfo: this.createMerchantInfo(config),\n    };\n\n    // TODO: #13 re-enable inferrence if/when we agree as a team\n\n    return request;\n  }\n\n  private createMerchantInfo(config: Config): google.payments.api.MerchantInfo {\n    const merchantInfo: google.payments.api.MerchantInfo = {\n      ...config.paymentRequest.merchantInfo,\n    };\n\n    // apply softwareInfo if not set\n    if (!merchantInfo.softwareInfo) {\n      merchantInfo.softwareInfo = {\n        id: this.options.softwareInfoId,\n        version: this.options.softwareInfoVersion,\n      };\n    }\n\n    return merchantInfo;\n  }\n\n  private isMounted(): boolean {\n    return this.element != null && this.element.isConnected !== false;\n  }\n\n  private removeButton(): void {\n    if (this.element instanceof ShadowRoot || this.element instanceof Element) {\n      for (const child of Array.from(this.element.children)) {\n        if (child.tagName !== 'STYLE') {\n          child.remove();\n        }\n      }\n    }\n  }\n\n  private async updateElement(): Promise<void> {\n    if (!this.isMounted()) return;\n    const element = this.element!;\n\n    if (!this.config) {\n      throw new Error('google-pay-button: Missing configuration');\n    }\n\n    // remove existing button\n    this.removeButton();\n\n    this.client = new google.payments.api.PaymentsClient(this.createClientOptions(this.config));\n\n    const buttonOptions: google.payments.api.ButtonOptions = {\n      buttonType: this.config.buttonType,\n      buttonColor: this.config.buttonColor,\n      buttonSizeMode: this.config.buttonSizeMode,\n      onClick: this.handleClick,\n    };\n\n    const rootNode = this.element?.getRootNode();\n    if (rootNode instanceof ShadowRoot) {\n      buttonOptions.buttonRootNode = rootNode;\n    }\n\n    // pre-create button\n    const button = this.client.createButton(buttonOptions);\n\n    this.setClassName(element, [element.className, 'not-ready']);\n    element.appendChild(button);\n\n    let showButton = false;\n    let readyToPay: google.payments.api.IsReadyToPayResponse | undefined;\n\n    try {\n      readyToPay = await this.client.isReadyToPay(this.createIsReadyToPayRequest(this.config));\n      showButton =\n        (readyToPay.result && !this.config.existingPaymentMethodRequired)\n        || (readyToPay.result && readyToPay.paymentMethodPresent && this.config.existingPaymentMethodRequired)\n        || false;\n    } catch (err) {\n      console.error(err);\n    }\n\n    if (!this.isMounted()) return;\n\n    if (showButton) {\n      try {\n        this.client.prefetchPaymentData(this.createLoadPaymentDataRequest(this.config));\n      } catch (err) {\n        console.log('Error with prefetch', err);\n      }\n\n      // remove hidden className\n      this.setClassName(\n        element,\n        (element.className || '').split(' ').filter(className => className && className !== 'not-ready'),\n      );\n    }\n\n    if (this.isReadyToPay !== readyToPay?.result || this.paymentMethodPresent !== readyToPay?.paymentMethodPresent) {\n      this.isReadyToPay = !!readyToPay?.result;\n      this.paymentMethodPresent = readyToPay?.paymentMethodPresent;\n\n      if (this.config.onReadyToPayChange) {\n        const readyToPayResponse: ReadyToPayChangeResponse = {\n          isButtonVisible: showButton,\n          isReadyToPay: this.isReadyToPay,\n        };\n\n        if (this.paymentMethodPresent) {\n          readyToPayResponse.paymentMethodPresent = this.paymentMethodPresent;\n        }\n\n        this.config.onReadyToPayChange(readyToPayResponse);\n      }\n    }\n  }\n\n  private handleClick = async (): Promise<void> => {\n    const config = this.config;\n    if (!config) {\n      throw new Error('google-pay-button: Missing configuration');\n    }\n\n    const request = this.createLoadPaymentDataRequest(config);\n\n    try {\n      const result = await this.client!.loadPaymentData(request);\n\n      if (config.onLoadPaymentData) {\n        config.onLoadPaymentData(result);\n      }\n    } catch (err) {\n      if (err.statusCode === 'CANCELED') {\n        if (config.onCancel) {\n          config.onCancel(err);\n        }\n      } else if (config.onError) {\n        config.onError(err);\n      } else {\n        console.error(err);\n      }\n    }\n  };\n\n  private setClassName(element: Element, classNames: string[]): void {\n    const className = classNames.filter(name => name).join(' ');\n    if (className) {\n      element.className = className;\n    } else {\n      element.removeAttribute('class');\n    }\n  }\n\n  private appendStyles(): void {\n    if (typeof document === 'undefined') return;\n\n    const rootNode = this.element?.getRootNode() as Document | ShadowRoot | undefined;\n    const styleId = `default-google-style-${this.options.cssSelector.replace(/[^\\w-]+/g, '')}`;\n\n    // initialize styles if rendering on the client:\n    if (rootNode) {\n      if (!rootNode.getElementById?.(styleId)) {\n        const style = document.createElement('style');\n        style.id = styleId;\n        style.type = 'text/css';\n        style.innerHTML = `\n          ${this.options.cssSelector} {\n            display: inline-block;\n          }\n          ${this.options.cssSelector}.not-ready {\n            width: 0;\n            height: 0;\n            overflow: hidden;\n          }\n        `;\n\n        if (rootNode instanceof Document && rootNode.head) {\n          rootNode.head.appendChild(style);\n        } else {\n          rootNode.appendChild(style);\n        }\n      }\n    }\n  }\n\n  private isClientInvalidated(newConfig: Config): boolean {\n    if (!this.oldInvalidationValues) return true;\n\n    const newValues = this.getInvalidationValues(newConfig);\n    return newValues.some((value, index) => value !== this.oldInvalidationValues![index]);\n  }\n\n  private getInvalidationValues(config: Config): any[] {\n    return [\n      config.environment,\n      config.existingPaymentMethodRequired,\n      !!config.onPaymentDataChanged,\n      !!config.onPaymentAuthorized,\n      config.buttonColor,\n      config.buttonType,\n      config.buttonSizeMode,\n      config.paymentRequest.merchantInfo.merchantId,\n      config.paymentRequest.merchantInfo.merchantName,\n      config.paymentRequest.merchantInfo.softwareInfo?.id,\n      config.paymentRequest.merchantInfo.softwareInfo?.version,\n    ];\n  }\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a new function that delays invocations to the original function\n * within a specified wait period. The last invocation within this time period\n * gets invoked. All earlier invocations are ignore.\n *\n * @param func The function to invoke.\n * @param wait The time in milliseconds to wait for idle invocations.\n */\nexport function debounce<T>(func: (...params: any[]) => T, wait = 0): () => Promise<T> {\n  let timeout: number | undefined;\n\n  return function (...args: any[]): Promise<any> {\n    window.clearTimeout(timeout);\n\n    const later = function (): any {\n      timeout = undefined;\n      return func(...args);\n    };\n\n    return new Promise(resolve => {\n      timeout = window.setTimeout(() => {\n        const result = later();\n        resolve(result);\n      }, wait);\n    });\n  };\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ButtonManager, Config } from '../../lib/button-manager';\nimport { Directive, ElementRef, Input, OnChanges, OnInit } from '@angular/core';\nimport { name as softwareId, version as softwareVersion } from '../package.json';\nimport { debounce } from '../../lib/debounce';\n\n@Directive({\n  selector: 'google-pay-button',\n})\nexport class GooglePayButtonComponent implements OnInit, OnChanges {\n  private manager = new ButtonManager({\n    cssSelector: 'google-pay-button',\n    softwareInfoId: softwareId,\n    softwareInfoVersion: softwareVersion,\n  });\n\n  @Input() paymentRequest!: google.payments.api.PaymentDataRequest;\n  @Input() environment!: google.payments.api.Environment;\n  @Input() existingPaymentMethodRequired!: boolean;\n  @Input() buttonColor?: google.payments.api.ButtonColor;\n  @Input() buttonType?: google.payments.api.ButtonType;\n  @Input() buttonSizeMode?: google.payments.api.ButtonSizeMode;\n  @Input() paymentDataChangedCallback?: google.payments.api.PaymentDataChangedHandler;\n  @Input() paymentAuthorizedCallback?: google.payments.api.PaymentAuthorizedHandler;\n  @Input() readyToPayChangeCallback?: (result: any) => void;\n  @Input() loadPaymentDataCallback?: (paymentData: google.payments.api.PaymentData) => void;\n  @Input() cancelCallback?: (reason: google.payments.api.PaymentsError) => void;\n  @Input() errorCallback?: (error: Error) => void;\n\n  constructor(private elementRef: ElementRef) {}\n\n  get isReadyToPay(): boolean | undefined {\n    return this.manager.isReadyToPay;\n  }\n\n  ngOnInit(): Promise<void> {\n    return this.manager.mount(this.elementRef.nativeElement);\n  }\n\n  ngOnChanges(): Promise<void> {\n    return this.initializeButton();\n  }\n\n  private initializeButton = debounce(() => {\n    if (!this.assertRequiredProperty('paymentRequest')) {\n      return;\n    }\n\n    if (!this.assertRequiredProperty('environment')) {\n      return;\n    }\n\n    const config: Config = {\n      paymentRequest: this.paymentRequest,\n      environment: this.environment,\n      existingPaymentMethodRequired: this.existingPaymentMethodRequired,\n      onPaymentDataChanged: this.paymentDataChangedCallback,\n      onPaymentAuthorized: this.paymentAuthorizedCallback,\n      buttonColor: this.buttonColor,\n      buttonType: this.buttonType,\n      buttonSizeMode: this.buttonSizeMode,\n      onReadyToPayChange: result => {\n        if (this.readyToPayChangeCallback) {\n          this.readyToPayChangeCallback(result);\n        }\n        this.dispatch('readytopaychange', result);\n      },\n      onCancel: reason => {\n        if (this.cancelCallback) {\n          this.cancelCallback(reason);\n        }\n        this.dispatch('cancel', reason);\n      },\n      onError: error => {\n        if (this.errorCallback) {\n          this.errorCallback?.(error);\n        }\n        this.elementRef.nativeElement.dispatchEvent(new ErrorEvent('error', { error }));\n      },\n      onLoadPaymentData: paymentData => {\n        if (this.loadPaymentDataCallback) {\n          this.loadPaymentDataCallback(paymentData);\n        }\n        this.dispatch('loadpaymentdata', paymentData);\n      },\n    };\n\n    this.manager.configure(config);\n  });\n\n  private assertRequiredProperty(name: string): boolean {\n    const value = (this as any)[name];\n    if (value === null || value === undefined) {\n      this.throwError(Error(`Required property not set: ${name}`));\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Throws an error.\n   *\n   * Used for testing purposes so that the method can be spied on.\n   */\n  private throwError(error: Error): never {\n    throw error;\n  }\n\n  private dispatch<T>(type: string, detail: T): void {\n    this.elementRef.nativeElement.dispatchEvent(\n      new CustomEvent(type, {\n        bubbles: true,\n        cancelable: false,\n        detail,\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GooglePayButtonComponent } from './google-pay-button.component';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [GooglePayButtonComponent],\n  imports: [],\n  exports: [GooglePayButtonComponent],\n})\nexport class GooglePayButtonModule {}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * Public API Surface of google-pay-button\n */\n\nexport * from './button-angular/lib/google-pay-button.component';\nexport * from './button-angular/lib/google-pay-button.module';\n\nexport { ReadyToPayChangeResponse } from './lib/button-manager';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './angular-public-api';\n"],"names":["softwareId","softwareVersion"],"mappings":"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"}
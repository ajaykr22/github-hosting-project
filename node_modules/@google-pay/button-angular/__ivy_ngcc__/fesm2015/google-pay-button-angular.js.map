{"version":3,"file":"google-pay-button-angular.js","sources":["../../../lib/load-script.ts","../../../lib/button-manager.ts","../../../lib/debounce.ts","../../lib/google-pay-button.component.ts","../../lib/google-pay-button.module.ts","../../../angular-public-api.ts","../../../google-pay-button-angular.ts"],"names":["softwareId","softwareVersion"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,IAAI,aAAa,GAAiC,EAAE,CAAC;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,UAAU,CAAC,GAAW;AAAI,IACxC,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;AACtC,IAAE,IAAI,QAAQ,EAAE;AAChB,QAAI,OAAO,QAAQ,CAAC;AACpB,KAAG;AACH,IACE,MAAM,OAAO,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;AACpD;AACI,QAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpD,QAAI,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACrB,QAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;AACxB;AAEG,QAAC,MAAM,YAAY,GAAG;AAAQ,YAC3B,OAAO,EAAE,CAAC;AAChB,SAAK,CAAC;AACN,QACI,MAAM,aAAa,GAAG;AAAQ;AAElC,YAAM,OAAO,EAAE,CAAC;AAChB;AAEK,YAAC,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;AAChC,YAAM,MAAM,CAAC,MAAM,EAAE,CAAC;AACtB,YACM,MAAM,CAAC,IAAI,KAAK,CAAC,yBAAyB,GAAG,EAAE,CAAC,CAAC,CAAC;AACxD,SAAK,CAAC;AACN,QACI,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AAClD,QAAI,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACpD;AAEG,QAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACtC;AAEG,QAAC,SAAS,OAAO;AAAK,YACnB,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AACvD,YAAM,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACzD,SAAK;AACL,KAAG,CAAC,CAAC;AACL,IACE,aAAa,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AAC/B,IACE,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;AACA;AACA;AACA,SAAgB,gBAAgB;AAAK,IACnC,aAAa,GAAG,EAAE,CAAC;AACrB;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGgD;AAKlC;AAIE;AAES;AAC6C;AAEvB;AACC;AAAQ;AAcxD;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,aAAa;AAC1B,IASE,YAAY,OAA6B;AAC3C,QA6NU,gBAAW,GAAG;AACA,YAApB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,YAAI,IAAI,CAAC,MAAM,EAAE;AACjB,gBAAM,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AAClE,aAAK;AACL,YACI,MAAM,OAAO,GAAG,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC,CAAC;AAC9D,YACI,IAAI;AACR,gBAAM,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AACjE,gBACM,IAAI,MAAM,CAAC,iBAAiB,EAAE;AACpC,oBAAQ,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO;AACP,aAAK;AAAC,YAAA,OAAO,GAAG,EAAE;AAClB,gBAAM,IAAI,GAAG,CAAC,UAAU,KAAK,UAAU,EAAE;AACzC,oBAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE;AAC7B,wBAAU,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC/B,qBAAS;AACT,iBAAO;AAAC,qBAAK,IAAI,MAAM,CAAC,OAAO,EAAE;AACjC,oBAAQ,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC5B,iBAAO;AAAC,qBAAK;AACb,oBAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,iBAAO;AACP,aAAK;AACL,SAAG,CAAA,CAAC;AACJ,QAvPI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,KAAG;AACH,IACE,UAAU;AAAK,QACb,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,KAAG;AACH,IACU,iBAAiB;AAAK;AACrB,QAAP,OAAO,QAAQ,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,cAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,0CAAE,GAAG,0CAAE,cAAc,CAAA,CAAC;AACrF,KAAG;AACH,IACQ,KAAK,CAAC,OAAgB;AAAI;AAExB,YADN,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE;AACnC,gBAAM,MAAM,UAAU,CAAC,uCAAuC,CAAC,CAAC;AAChE,aAAK;AACL,YACI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,YAAI,IAAI,OAAO,EAAE;AACjB,gBAAM,IAAI,CAAC,YAAY,EAAE,CAAC;AAC1B,gBAAM,IAAI,IAAI,CAAC,MAAM,EAAE;AACvB,oBAAQ,IAAI,CAAC,aAAa,EAAE,CAAC;AAC7B,iBAAO;AACP,aAAK;AACL,SAAG;AAEF,KAFE;AACH,IACE,OAAO;AAAK,QACV,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;AAC7B,KAAG;AACH,IACE,SAAS,CAAC,SAAiB;AAAI,QAC7B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;AAC5B,QAAI,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE;AAC5E,YAAM,IAAI,CAAC,aAAa,EAAE,CAAC;AAC3B,SAAK;AACL,QAAI,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;AACvE,KAAG;AACH;AAEC;AACE;AAEH;AAAO;AACE;AAEH;AAAO;AAEJ;AAAQ,IAAf,mBAAmB,CAAC,MAAc;AAAI,QACpC,MAAM,YAAY,GAAuC;AAC7D,YAAM,WAAW,EAAE,MAAM,CAAC,WAAW;AACrC,YAAM,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;AACnD,SAAK,CAAC;AACN,QACI,IAAI,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,mBAAmB,EAAE;AACnE,YAAM,YAAY,CAAC,oBAAoB,GAAG,EAAE,CAAC;AAC7C,YACM,IAAI,MAAM,CAAC,oBAAoB,EAAE;AACvC;AACQ,gBAAA,YAAY,CAAC,oBAAoB,CAAC,oBAAoB,GAAG,WAAW;AAC5E,oBAAU,MAAM,MAAM,GAAG,MAAM,CAAC,oBAAqB,CAAC,WAAW,CAAC,CAAC;AACnE,oBAAU,OAAO,MAAM,IAAK,EAAmD,CAAC;AAChF,iBAAS,CAAC;AACV,aAAO;AACP,YACM,IAAI,MAAM,CAAC,mBAAmB,EAAE;AACtC;AACQ,gBAAA,YAAY,CAAC,oBAAoB,CAAC,mBAAmB,GAAG,WAAW;AAC3E,oBAAU,MAAM,MAAM,GAAG,MAAM,CAAC,mBAAoB,CAAC,WAAW,CAAC,CAAC;AAClE,oBAAU,OAAO,MAAM,IAAK,EAAqD,CAAC;AAClF,iBAAS,CAAC;AACV,aAAO;AACP,SAAK;AACL,QACI,OAAO,YAAY,CAAC;AACxB,KAAG;AACH,IACU,yBAAyB,CAAC,MAAc;AAAI,QAClD,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AACjD,QAAI,MAAM,OAAO,GAA4C;AAC7D,YAAM,UAAU,EAAE,cAAc,CAAC,UAAU;AAC3C,YAAM,eAAe,EAAE,cAAc,CAAC,eAAe;AACrD,YAAM,qBAAqB,EAAE,cAAc,CAAC,qBAAqB;AACjE,YAAM,6BAA6B,EAAE,MAAM,CAAC,6BAA6B;AACzE,SAAK,CAAC;AACN,QACI,OAAO,OAAO,CAAC;AACnB,KAAG;AACH;AAEC;AACE;AACE;AACE;AACE;AACE;AACE;AAEH;AAAO;AACE;AAGjB;AACC;AAAgB;AAAQ,IAAzB,4BAA4B,CAAC,MAAc;AAAI,QAC7C,MAAM,OAAO,mCACR,MAAM,CAAC,cAAc,KACxB,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAC9C,CAAC;AACN;AAGE,QAAE,OAAO,OAAO,CAAC;AACnB,KAAG;AACH,IACU,kBAAkB,CAAC,MAAc;AAAI,QAC3C,MAAM,YAAY,qBACb,MAAM,CAAC,cAAc,CAAC,YAAY,CACtC,CAAC;AACN;AAEG,QAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;AACpC,YAAM,YAAY,CAAC,YAAY,GAAG;AAClC,gBAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;AACvC,gBAAQ,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB;AACjD,aAAO,CAAC;AACR,SAAK;AACL,QACI,OAAO,YAAY,CAAC;AACxB,KAAG;AACH,IACU,SAAS;AAAK,QACpB,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,CAAC;AACtE,KAAG;AACH,IACU,YAAY;AAAK,QACvB,IAAI,IAAI,CAAC,OAAO,YAAY,UAAU,IAAI,IAAI,CAAC,OAAO,YAAY,OAAO,EAAE;AAC/E,YAAM,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC7D,gBAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE;AACvC,oBAAU,KAAK,CAAC,MAAM,EAAE,CAAC;AACzB,iBAAS;AACT,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACgB,aAAa;AAAK;AACjC;AAC2B,YADxB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAAE,gBAAA,OAAO;AAClC,YAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAQ,CAAC;AAClC,YACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,gBAAM,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AAClE,aAAK;AACL;AAEO,YAAH,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,YACI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAChG,YACI,MAAM,aAAa,GAAsC;AAC7D,gBAAM,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;AACxC,gBAAM,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;AAC1C,gBAAM,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc;AAChD,gBAAM,OAAO,EAAE,IAAI,CAAC,WAAW;AAC/B,aAAK,CAAC;AACN,YACI,MAAM,QAAQ,SAAG,IAAI,CAAC,OAAO,0CAAE,WAAW,EAAE,CAAC;AACjD,YAAI,IAAI,QAAQ,YAAY,UAAU,EAAE;AACxC,gBAAM,aAAa,CAAC,cAAc,GAAG,QAAQ,CAAC;AAC9C,aAAK;AACL;AAEO,YAAH,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAC3D,YACI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;AACjE,YAAI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAChC,YACI,IAAI,UAAU,GAAG,KAAK,CAAC;AAC3B,YAAI,IAAI,UAAgE,CAAC;AACzE,YACI,IAAI;AACR,gBAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/F,gBAAM,UAAU;AAChB,oBAAQ,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,6BAA6B;AACxE,4BAAY,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,oBAAoB,IAAI,IAAI,CAAC,MAAM,CAAC,6BAA6B,CAAC;AAC9G,2BAAW,KAAK,CAAC;AACjB,aAAK;AAAC,YAAA,OAAO,GAAG,EAAE;AAClB,gBAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB,aAAK;AACL,YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAAE,gBAAA,OAAO;AAClC,YACI,IAAI,UAAU,EAAE;AACpB,gBAAM,IAAI;AACV,oBAAQ,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACxF,iBAAO;AAAC,gBAAA,OAAO,GAAG,EAAE;AACpB,oBAAQ,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;AAChD,iBAAO;AACP;AAES,gBAAH,IAAI,CAAC,YAAY,CACf,OAAO,EACP,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS,IAAI,SAAS,KAAK,WAAW,CAAC,CACjG,CAAC;AACR,aAAK;AACL,YACI,IAAI,IAAI,CAAC,YAAY,MAAK,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,CAAA,IAAI,IAAI,CAAC,oBAAoB,MAAK,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,oBAAoB,CAAA,EAAE;AACpH,gBAAM,IAAI,CAAC,YAAY,GAAG,CAAC,EAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,CAAA,CAAC;AAC/C,gBAAM,IAAI,CAAC,oBAAoB,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,oBAAoB,CAAC;AACnE,gBACM,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AAC1C,oBAAQ,MAAM,kBAAkB,GAA6B;AAC7D,wBAAU,eAAe,EAAE,UAAU;AACrC,wBAAU,YAAY,EAAE,IAAI,CAAC,YAAY;AACzC,qBAAS,CAAC;AACV,oBACQ,IAAI,IAAI,CAAC,oBAAoB,EAAE;AACvC,wBAAU,kBAAkB,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;AAC9E,qBAAS;AACT,oBACQ,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;AAC3D,iBAAO;AACP,aAAK;AACL;AAEO,KAFJ;AACH,IA4BU,YAAY,CAAC,OAAgB,EAAE,UAAoB;AAAI,QAC7D,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChE,QAAI,IAAI,SAAS,EAAE;AACnB,YAAM,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;AACpC,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AACvC,SAAK;AACL,KAAG;AACH,IACU,YAAY;AAAK;AACb,QAAV,IAAI,OAAO,QAAQ,KAAK,WAAW;AAAE,YAAA,OAAO;AAChD,QACI,MAAM,QAAQ,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,WAAW,EAAuC,CAAC;AACtF,QAAI,MAAM,OAAO,GAAG,wBAAwB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC;AAC/F;AAEG,QAAC,IAAI,QAAQ,EAAE;AAClB,YAAM,IAAI,QAAC,QAAQ,CAAC,cAAc,+CAAvB,QAAQ,EAAkB,OAAO,EAAC,EAAE;AAC/C,gBAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AACtD,gBAAQ,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC;AAC3B,gBAAQ,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;AAChC,gBAAQ,KAAK,CAAC,SAAS,GAAG;AAC1B,YAAY,IAAI,CAAC,OAAO,CAAC,WAAW;AACpC;AACA;AACA,YAAY,IAAI,CAAC,OAAO,CAAC,WAAW;AACpC;AACA;AACA;AACA;AACA,SAAS,CAAC;AACV,gBACQ,IAAI,QAAQ,YAAY,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;AAC3D,oBAAU,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3C,iBAAS;AAAC,qBAAK;AACf,oBAAU,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACtC,iBAAS;AACT,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACU,mBAAmB,CAAC,SAAiB;AAAI,QAC/C,IAAI,CAAC,IAAI,CAAC,qBAAqB;AAAE,YAAA,OAAO,IAAI,CAAC;AACjD,QACI,MAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;AAC5D,QAAI,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,IAAI,CAAC,qBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1F,KAAG;AACH,IACU,qBAAqB,CAAC,MAAc;AAAI;AAElD,QADI,OAAO;AACX,YAAM,MAAM,CAAC,WAAW;AACxB,YAAM,MAAM,CAAC,6BAA6B;AAC1C,YAAM,CAAC,CAAC,MAAM,CAAC,oBAAoB;AACnC,YAAM,CAAC,CAAC,MAAM,CAAC,mBAAmB;AAClC,YAAM,MAAM,CAAC,WAAW;AACxB,YAAM,MAAM,CAAC,UAAU;AACvB,YAAM,MAAM,CAAC,cAAc;AAC3B,YAAM,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,UAAU;AACnD,YAAM,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY;AACrD,kBAAM,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,0CAAE,EAAE;AACzD,kBAAM,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,0CAAE,OAAO;AAC9D,SAAK,CAAC;AACN,KAAG;AACH;AACA;AAAC;AAAyC;AAAuB;AAA6D;AAA4B;AAAmB;AAAc;AAAyD;AAAiC;AAAG;AAAsG;AAAgB;AAAiB;AAAG;AAAoC;AAA4B;AAAgB;AAA0B;AAAG;AAAqB;AAA8B;AAAG;AAAyB;AAA6B;AAA8B;AAAG;AAAc;AAAW;AAAc;AAAc;AAAe;AAAU;AAAqB;AAAgC;AAAW;AAAW;AAAa;AAAG;AAAiB;AAAc;AAAe;AAAsB;AAAW;AAAW;AAAG;AAAwB;AAAkD;AAA6B;AAAyB;AAAG;AAAiB;AAAa;AAAmB;AAA2B;AAAa;AAAyB;AAAqB;AAAmB;AAAiB;AAAmB;AAAmB;AAA6B;AAAqC;AAAe;AAAqB;AAAkC;AAAG;ACxXj4C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,QAAQ,CAAI,IAA6B,EAAE,IAAI,GAAG,CAAC;AAAI,IACrE,IAAI,OAA2B,CAAC;AAClC,IACE,OAAO,UAAU,GAAG,IAAW;AAAI,QACjC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACjC,QACI,MAAM,KAAK,GAAG;AAAc,YAC1B,OAAO,GAAG,SAAS,CAAC;AAC1B,YAAM,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3B,SAAK,CAAC;AACN,QACI,OAAO,IAAI,OAAO,CAAC,OAAO;AAC9B,YAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;AAClC,gBAAQ,MAAM,MAAM,GAAG,KAAK,EAAE,CAAC;AAC/B,gBAAQ,OAAO,CAAC,MAAM,CAAC,CAAC;AACxB,aAAO,EAAE,IAAI,CAAC,CAAC;AACf,SAAK,CAAC,CAAC;AACP,KAAG,CAAC;AACJ;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MASa,wBAAwB;AAAG,IAoBtC,YAAoB,UAAsB;AAAI,QAA1B,eAAU,GAAV,UAAU,CAAY;AAAC,QAnBnC,YAAO,GAAG,IAAI,aAAa,CAAC;AACtC,YAAI,WAAW,EAAE,mBAAmB;AACpC,YAAI,cAAc,EAAEA,IAAU;AAC9B,YAAI,mBAAmB,EAAEC,OAAe;AACxC,SAAG,CAAC,CAAC;AACL,QA4BU,qBAAgB,GAAG,QAAQ,CAAC;AACtC,YAAI,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,EAAE;AACxD,gBAAM,OAAO;AACb,aAAK;AACL,YACI,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,EAAE;AACrD,gBAAM,OAAO;AACb,aAAK;AACL,YACI,MAAM,MAAM,GAAW;AAC3B,gBAAM,cAAc,EAAE,IAAI,CAAC,cAAc;AACzC,gBAAM,WAAW,EAAE,IAAI,CAAC,WAAW;AACnC,gBAAM,6BAA6B,EAAE,IAAI,CAAC,6BAA6B;AACvE,gBAAM,oBAAoB,EAAE,IAAI,CAAC,0BAA0B;AAC3D,gBAAM,mBAAmB,EAAE,IAAI,CAAC,yBAAyB;AACzD,gBAAM,WAAW,EAAE,IAAI,CAAC,WAAW;AACnC,gBAAM,UAAU,EAAE,IAAI,CAAC,UAAU;AACjC,gBAAM,cAAc,EAAE,IAAI,CAAC,cAAc;AACzC,gBAAM,kBAAkB,EAAE,MAAM;AAChC,oBAAQ,IAAI,IAAI,CAAC,wBAAwB,EAAE;AAC3C,wBAAU,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;AAChD,qBAAS;AACT,oBAAQ,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;AAClD,iBAAO;AACP,gBAAM,QAAQ,EAAE,MAAM;AACtB,oBAAQ,IAAI,IAAI,CAAC,cAAc,EAAE;AACjC,wBAAU,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACtC,qBAAS;AACT,oBAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACxC,iBAAO;AACP,gBAAM,OAAO,EAAE,KAAK;AACpB;AAA4B,oBAApB,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,wBAAU,MAAA,IAAI,CAAC,aAAa,+CAAlB,IAAI,EAAiB,KAAK,EAAE;AACtC,qBAAS;AACT,oBAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACxF,iBAAO;AACP,gBAAM,iBAAiB,EAAE,WAAW;AACpC,oBAAQ,IAAI,IAAI,CAAC,uBAAuB,EAAE;AAC1C,wBAAU,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;AACpD,qBAAS;AACT,oBAAQ,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;AACtD,iBAAO;AACP,aAAK,CAAC;AACN,YACI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACnC,SAAG,CAAC,CAAC;AACL,KA5DgD;AAChD,IACE,IAAI,YAAY;AAAK,QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;AACrC,KAAG;AACH,IACE,QAAQ;AAAK,QACX,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAC7D,KAAG;AACH,IACE,WAAW;AAAK,QACd,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACnC,KAAG;AACH,IAgDU,sBAAsB,CAAC,IAAY;AAAI,QAC7C,MAAM,KAAK,GAAI,IAAY,CAAC,IAAI,CAAC,CAAC;AACtC,QAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;AAC/C,YAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,8BAA8B,IAAI,EAAE,CAAC,CAAC,CAAC;AACnE,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL,QACI,OAAO,IAAI,CAAC;AAChB,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ,IAAC,UAAU,CAAC,KAAY;AAAI,QACjC,MAAM,KAAK,CAAC;AAChB,KAAG;AACH,IACU,QAAQ,CAAI,IAAY,EAAE,MAAS;AAAI,QAC7C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CACzC,IAAI,WAAW,CAAC,IAAI,EAAE;AAC5B,YAAQ,OAAO,EAAE,IAAI;AACrB,YAAQ,UAAU,EAAE,KAAK;AACzB,YAAQ,MAAM;AACd,SAAO,CAAC,CACH,CAAC;AACN,KAAG;AACH;oDAhHC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB,eAC9B;0qBACI;AAAC;AAAkD,YAPpC,UAAU;AAAG;AAAG;AAA4C,6BAc7E,KAAK;AAAK,0BACV,KAAK;AAAK,4CACV,KAAK;AAAK,0BACV,KAAK;AAAK,yBACV,KAAK;AAAK,6BACV,KAAK;AAAK,yCACV,KAAK;AAAK,wCACV,KAAK;AAAK,uCACV,KAAK;AAAK,sCACV,KAAK;AAAK,6BACV,KAAK;AAAK,4BACV,KAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AC1Cf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MASa,qBAAqB;AAAG;iDALpC,QAAQ,SAAC,kBACR;SAAY,EAAE,CAAC,wBAAwB,CAAC,kBACxC,OAAO,EAAE,EAAE,kBACX,OAAO,EAAE,CAAC,wBAAwB,CAAC,eACpC;;;;;;;;;0BACI;AAAC;ACxBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACsB","sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Keeps track scripts that have been requested by loadScript.\n */\nlet cachedScripts: Record<string, Promise<any>> = {};\n\n/**\n * Asynchronously loads a script keeping track of which scripts have already\n * requested and loaded.\n *\n * Multiple requests to the same resource will return the same promise.\n *\n * @param src Script URL to load\n */\nexport function loadScript(src: string): Promise<void> {\n  const existing = cachedScripts[src];\n  if (existing) {\n    return existing;\n  }\n\n  const promise = new Promise<void>((resolve, reject) => {\n    // Create script\n    const script = document.createElement('script');\n    script.src = src;\n    script.async = true;\n\n    // Script event listener callbacks for load and error\n    const onScriptLoad = (): void => {\n      resolve();\n    };\n\n    const onScriptError = (): void => {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      cleanup();\n\n      // Remove from cachedScripts so that we can try loading again\n      delete cachedScripts[src];\n      script.remove();\n\n      reject(new Error(`Unable to load script ${src}`));\n    };\n\n    script.addEventListener('load', onScriptLoad);\n    script.addEventListener('error', onScriptError);\n\n    // Add script to document body\n    document.body.appendChild(script);\n\n    // Remove event listeners on cleanup\n    function cleanup(): void {\n      script.removeEventListener('load', onScriptLoad);\n      script.removeEventListener('error', onScriptError);\n    }\n  });\n\n  cachedScripts[src] = promise;\n\n  return promise;\n}\n\n/**\n * Clears the script cache. Used for testing purposes only.\n */\nexport function clearScriptCache(): void {\n  cachedScripts = {};\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable react/no-is-mounted */\n\nimport { loadScript } from '../lib/load-script';\n\nexport interface ReadyToPayChangeResponse {\n  isButtonVisible: boolean;\n  isReadyToPay: boolean;\n  paymentMethodPresent?: boolean;\n}\n\nexport interface Config {\n  environment: google.payments.api.Environment;\n  existingPaymentMethodRequired?: boolean;\n  paymentRequest: google.payments.api.PaymentDataRequest;\n  onPaymentDataChanged?: google.payments.api.PaymentDataChangedHandler;\n  onPaymentAuthorized?: google.payments.api.PaymentAuthorizedHandler;\n  onLoadPaymentData?: (paymentData: google.payments.api.PaymentData) => void;\n  onCancel?: (reason: google.payments.api.PaymentsError) => void;\n  onError?: (error: Error) => void;\n  onReadyToPayChange?: (result: ReadyToPayChangeResponse) => void;\n  buttonColor?: google.payments.api.ButtonColor;\n  buttonType?: google.payments.api.ButtonType;\n  buttonSizeMode?: google.payments.api.ButtonSizeMode;\n}\n\ninterface ButtonManagerOptions {\n  cssSelector: string;\n  softwareInfoId: string;\n  softwareInfoVersion: string;\n}\n\n/**\n * Manages the lifecycle of the Google Pay button.\n *\n * Includes lifecycle management of the `PaymentsClient` instance,\n * `isReadyToPay`, `onClick`, `loadPaymentData`, and other callback methods.\n */\nexport class ButtonManager {\n  private client?: google.payments.api.PaymentsClient;\n  private config?: Config;\n  private element?: Element;\n  private options: ButtonManagerOptions;\n  private oldInvalidationValues?: any[];\n\n  isReadyToPay?: boolean;\n  paymentMethodPresent?: boolean;\n\n  constructor(options: ButtonManagerOptions) {\n    this.options = options;\n  }\n\n  getElement(): Node | undefined {\n    return this.element;\n  }\n\n  private isGooglePayLoaded(): boolean {\n    return 'google' in (window || global) && !!google?.payments?.api?.PaymentsClient;\n  }\n\n  async mount(element: Element): Promise<void> {\n    if (!this.isGooglePayLoaded()) {\n      await loadScript('https://pay.google.com/gp/p/js/pay.js');\n    }\n\n    this.element = element;\n    if (element) {\n      this.appendStyles();\n      if (this.config) {\n        this.updateElement();\n      }\n    }\n  }\n\n  unmount(): void {\n    this.element = undefined;\n  }\n\n  configure(newConfig: Config): void {\n    this.config = newConfig;\n    if (!this.oldInvalidationValues || this.isClientInvalidated(newConfig)) {\n      this.updateElement();\n    }\n    this.oldInvalidationValues = this.getInvalidationValues(newConfig);\n  }\n\n  /**\n   * Creates client configuration options based on button configuration\n   * options.\n   *\n   * This method would normally be private but has been made public for\n   * testing purposes.\n   *\n   * @private\n   */\n  createClientOptions(config: Config): google.payments.api.PaymentOptions {\n    const clientConfig: google.payments.api.PaymentOptions = {\n      environment: config.environment,\n      merchantInfo: this.createMerchantInfo(config),\n    };\n\n    if (config.onPaymentDataChanged || config.onPaymentAuthorized) {\n      clientConfig.paymentDataCallbacks = {};\n\n      if (config.onPaymentDataChanged) {\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        clientConfig.paymentDataCallbacks.onPaymentDataChanged = paymentData => {\n          const result = config.onPaymentDataChanged!(paymentData);\n          return result || ({} as google.payments.api.PaymentDataRequestUpdate);\n        };\n      }\n\n      if (config.onPaymentAuthorized) {\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        clientConfig.paymentDataCallbacks.onPaymentAuthorized = paymentData => {\n          const result = config.onPaymentAuthorized!(paymentData);\n          return result || ({} as google.payments.api.PaymentAuthorizationResult);\n        };\n      }\n    }\n\n    return clientConfig;\n  }\n\n  private createIsReadyToPayRequest(config: Config): google.payments.api.IsReadyToPayRequest {\n    const paymentRequest = config.paymentRequest;\n    const request: google.payments.api.IsReadyToPayRequest = {\n      apiVersion: paymentRequest.apiVersion,\n      apiVersionMinor: paymentRequest.apiVersionMinor,\n      allowedPaymentMethods: paymentRequest.allowedPaymentMethods,\n      existingPaymentMethodRequired: config.existingPaymentMethodRequired,\n    };\n\n    return request;\n  }\n\n  /**\n   * Constructs `loadPaymentData` request object based on button configuration.\n   *\n   * It infers request properties like `shippingAddressRequired`,\n   * `shippingOptionRequired`, and `billingAddressRequired` if not already set\n   * based on the presence of their associated options and parameters. It also\n   * infers `callbackIntents` based on the callback methods defined in button\n   * configuration.\n   *\n   * This method would normally be private but has been made public for\n   * testing purposes.\n   *\n   * @private\n   */\n  createLoadPaymentDataRequest(config: Config): google.payments.api.PaymentDataRequest {\n    const request = {\n      ...config.paymentRequest,\n      merchantInfo: this.createMerchantInfo(config),\n    };\n\n    // TODO: #13 re-enable inferrence if/when we agree as a team\n\n    return request;\n  }\n\n  private createMerchantInfo(config: Config): google.payments.api.MerchantInfo {\n    const merchantInfo: google.payments.api.MerchantInfo = {\n      ...config.paymentRequest.merchantInfo,\n    };\n\n    // apply softwareInfo if not set\n    if (!merchantInfo.softwareInfo) {\n      merchantInfo.softwareInfo = {\n        id: this.options.softwareInfoId,\n        version: this.options.softwareInfoVersion,\n      };\n    }\n\n    return merchantInfo;\n  }\n\n  private isMounted(): boolean {\n    return this.element != null && this.element.isConnected !== false;\n  }\n\n  private removeButton(): void {\n    if (this.element instanceof ShadowRoot || this.element instanceof Element) {\n      for (const child of Array.from(this.element.children)) {\n        if (child.tagName !== 'STYLE') {\n          child.remove();\n        }\n      }\n    }\n  }\n\n  private async updateElement(): Promise<void> {\n    if (!this.isMounted()) return;\n    const element = this.element!;\n\n    if (!this.config) {\n      throw new Error('google-pay-button: Missing configuration');\n    }\n\n    // remove existing button\n    this.removeButton();\n\n    this.client = new google.payments.api.PaymentsClient(this.createClientOptions(this.config));\n\n    const buttonOptions: google.payments.api.ButtonOptions = {\n      buttonType: this.config.buttonType,\n      buttonColor: this.config.buttonColor,\n      buttonSizeMode: this.config.buttonSizeMode,\n      onClick: this.handleClick,\n    };\n\n    const rootNode = this.element?.getRootNode();\n    if (rootNode instanceof ShadowRoot) {\n      buttonOptions.buttonRootNode = rootNode;\n    }\n\n    // pre-create button\n    const button = this.client.createButton(buttonOptions);\n\n    this.setClassName(element, [element.className, 'not-ready']);\n    element.appendChild(button);\n\n    let showButton = false;\n    let readyToPay: google.payments.api.IsReadyToPayResponse | undefined;\n\n    try {\n      readyToPay = await this.client.isReadyToPay(this.createIsReadyToPayRequest(this.config));\n      showButton =\n        (readyToPay.result && !this.config.existingPaymentMethodRequired)\n        || (readyToPay.result && readyToPay.paymentMethodPresent && this.config.existingPaymentMethodRequired)\n        || false;\n    } catch (err) {\n      console.error(err);\n    }\n\n    if (!this.isMounted()) return;\n\n    if (showButton) {\n      try {\n        this.client.prefetchPaymentData(this.createLoadPaymentDataRequest(this.config));\n      } catch (err) {\n        console.log('Error with prefetch', err);\n      }\n\n      // remove hidden className\n      this.setClassName(\n        element,\n        (element.className || '').split(' ').filter(className => className && className !== 'not-ready'),\n      );\n    }\n\n    if (this.isReadyToPay !== readyToPay?.result || this.paymentMethodPresent !== readyToPay?.paymentMethodPresent) {\n      this.isReadyToPay = !!readyToPay?.result;\n      this.paymentMethodPresent = readyToPay?.paymentMethodPresent;\n\n      if (this.config.onReadyToPayChange) {\n        const readyToPayResponse: ReadyToPayChangeResponse = {\n          isButtonVisible: showButton,\n          isReadyToPay: this.isReadyToPay,\n        };\n\n        if (this.paymentMethodPresent) {\n          readyToPayResponse.paymentMethodPresent = this.paymentMethodPresent;\n        }\n\n        this.config.onReadyToPayChange(readyToPayResponse);\n      }\n    }\n  }\n\n  private handleClick = async (): Promise<void> => {\n    const config = this.config;\n    if (!config) {\n      throw new Error('google-pay-button: Missing configuration');\n    }\n\n    const request = this.createLoadPaymentDataRequest(config);\n\n    try {\n      const result = await this.client!.loadPaymentData(request);\n\n      if (config.onLoadPaymentData) {\n        config.onLoadPaymentData(result);\n      }\n    } catch (err) {\n      if (err.statusCode === 'CANCELED') {\n        if (config.onCancel) {\n          config.onCancel(err);\n        }\n      } else if (config.onError) {\n        config.onError(err);\n      } else {\n        console.error(err);\n      }\n    }\n  };\n\n  private setClassName(element: Element, classNames: string[]): void {\n    const className = classNames.filter(name => name).join(' ');\n    if (className) {\n      element.className = className;\n    } else {\n      element.removeAttribute('class');\n    }\n  }\n\n  private appendStyles(): void {\n    if (typeof document === 'undefined') return;\n\n    const rootNode = this.element?.getRootNode() as Document | ShadowRoot | undefined;\n    const styleId = `default-google-style-${this.options.cssSelector.replace(/[^\\w-]+/g, '')}`;\n\n    // initialize styles if rendering on the client:\n    if (rootNode) {\n      if (!rootNode.getElementById?.(styleId)) {\n        const style = document.createElement('style');\n        style.id = styleId;\n        style.type = 'text/css';\n        style.innerHTML = `\n          ${this.options.cssSelector} {\n            display: inline-block;\n          }\n          ${this.options.cssSelector}.not-ready {\n            width: 0;\n            height: 0;\n            overflow: hidden;\n          }\n        `;\n\n        if (rootNode instanceof Document && rootNode.head) {\n          rootNode.head.appendChild(style);\n        } else {\n          rootNode.appendChild(style);\n        }\n      }\n    }\n  }\n\n  private isClientInvalidated(newConfig: Config): boolean {\n    if (!this.oldInvalidationValues) return true;\n\n    const newValues = this.getInvalidationValues(newConfig);\n    return newValues.some((value, index) => value !== this.oldInvalidationValues![index]);\n  }\n\n  private getInvalidationValues(config: Config): any[] {\n    return [\n      config.environment,\n      config.existingPaymentMethodRequired,\n      !!config.onPaymentDataChanged,\n      !!config.onPaymentAuthorized,\n      config.buttonColor,\n      config.buttonType,\n      config.buttonSizeMode,\n      config.paymentRequest.merchantInfo.merchantId,\n      config.paymentRequest.merchantInfo.merchantName,\n      config.paymentRequest.merchantInfo.softwareInfo?.id,\n      config.paymentRequest.merchantInfo.softwareInfo?.version,\n    ];\n  }\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a new function that delays invocations to the original function\n * within a specified wait period. The last invocation within this time period\n * gets invoked. All earlier invocations are ignore.\n *\n * @param func The function to invoke.\n * @param wait The time in milliseconds to wait for idle invocations.\n */\nexport function debounce<T>(func: (...params: any[]) => T, wait = 0): () => Promise<T> {\n  let timeout: number | undefined;\n\n  return function (...args: any[]): Promise<any> {\n    window.clearTimeout(timeout);\n\n    const later = function (): any {\n      timeout = undefined;\n      return func(...args);\n    };\n\n    return new Promise(resolve => {\n      timeout = window.setTimeout(() => {\n        const result = later();\n        resolve(result);\n      }, wait);\n    });\n  };\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ButtonManager, Config } from '../../lib/button-manager';\nimport { Directive, ElementRef, Input, OnChanges, OnInit } from '@angular/core';\nimport { name as softwareId, version as softwareVersion } from '../package.json';\nimport { debounce } from '../../lib/debounce';\n\n@Directive({\n  selector: 'google-pay-button',\n})\nexport class GooglePayButtonComponent implements OnInit, OnChanges {\n  private manager = new ButtonManager({\n    cssSelector: 'google-pay-button',\n    softwareInfoId: softwareId,\n    softwareInfoVersion: softwareVersion,\n  });\n\n  @Input() paymentRequest!: google.payments.api.PaymentDataRequest;\n  @Input() environment!: google.payments.api.Environment;\n  @Input() existingPaymentMethodRequired!: boolean;\n  @Input() buttonColor?: google.payments.api.ButtonColor;\n  @Input() buttonType?: google.payments.api.ButtonType;\n  @Input() buttonSizeMode?: google.payments.api.ButtonSizeMode;\n  @Input() paymentDataChangedCallback?: google.payments.api.PaymentDataChangedHandler;\n  @Input() paymentAuthorizedCallback?: google.payments.api.PaymentAuthorizedHandler;\n  @Input() readyToPayChangeCallback?: (result: any) => void;\n  @Input() loadPaymentDataCallback?: (paymentData: google.payments.api.PaymentData) => void;\n  @Input() cancelCallback?: (reason: google.payments.api.PaymentsError) => void;\n  @Input() errorCallback?: (error: Error) => void;\n\n  constructor(private elementRef: ElementRef) {}\n\n  get isReadyToPay(): boolean | undefined {\n    return this.manager.isReadyToPay;\n  }\n\n  ngOnInit(): Promise<void> {\n    return this.manager.mount(this.elementRef.nativeElement);\n  }\n\n  ngOnChanges(): Promise<void> {\n    return this.initializeButton();\n  }\n\n  private initializeButton = debounce(() => {\n    if (!this.assertRequiredProperty('paymentRequest')) {\n      return;\n    }\n\n    if (!this.assertRequiredProperty('environment')) {\n      return;\n    }\n\n    const config: Config = {\n      paymentRequest: this.paymentRequest,\n      environment: this.environment,\n      existingPaymentMethodRequired: this.existingPaymentMethodRequired,\n      onPaymentDataChanged: this.paymentDataChangedCallback,\n      onPaymentAuthorized: this.paymentAuthorizedCallback,\n      buttonColor: this.buttonColor,\n      buttonType: this.buttonType,\n      buttonSizeMode: this.buttonSizeMode,\n      onReadyToPayChange: result => {\n        if (this.readyToPayChangeCallback) {\n          this.readyToPayChangeCallback(result);\n        }\n        this.dispatch('readytopaychange', result);\n      },\n      onCancel: reason => {\n        if (this.cancelCallback) {\n          this.cancelCallback(reason);\n        }\n        this.dispatch('cancel', reason);\n      },\n      onError: error => {\n        if (this.errorCallback) {\n          this.errorCallback?.(error);\n        }\n        this.elementRef.nativeElement.dispatchEvent(new ErrorEvent('error', { error }));\n      },\n      onLoadPaymentData: paymentData => {\n        if (this.loadPaymentDataCallback) {\n          this.loadPaymentDataCallback(paymentData);\n        }\n        this.dispatch('loadpaymentdata', paymentData);\n      },\n    };\n\n    this.manager.configure(config);\n  });\n\n  private assertRequiredProperty(name: string): boolean {\n    const value = (this as any)[name];\n    if (value === null || value === undefined) {\n      this.throwError(Error(`Required property not set: ${name}`));\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Throws an error.\n   *\n   * Used for testing purposes so that the method can be spied on.\n   */\n  private throwError(error: Error): never {\n    throw error;\n  }\n\n  private dispatch<T>(type: string, detail: T): void {\n    this.elementRef.nativeElement.dispatchEvent(\n      new CustomEvent(type, {\n        bubbles: true,\n        cancelable: false,\n        detail,\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GooglePayButtonComponent } from './google-pay-button.component';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [GooglePayButtonComponent],\n  imports: [],\n  exports: [GooglePayButtonComponent],\n})\nexport class GooglePayButtonModule {}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * Public API Surface of google-pay-button\n */\n\nexport * from './button-angular/lib/google-pay-button.component';\nexport * from './button-angular/lib/google-pay-button.module';\n\nexport { ReadyToPayChangeResponse } from './lib/button-manager';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './angular-public-api';\n"]}